name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  backend-lint-and-test:
    name: Backend - Lint and Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: starterkit
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./api/go.mod
          cache: true

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x

      - name: Cache Go tools
        uses: actions/cache@v4
        with:
          path: ~/go/bin
          key: go-tools-${{ runner.os }}-${{ hashFiles('Taskfile-tools.yml') }}
          restore-keys: |
            go-tools-${{ runner.os }}-

      - name: Install tools
        run: task backend:install-tools

      - name: Check formatting
        run: task backend:format:check

      - name: Run vet
        run: task backend:vet

      - name: Run lint
        run: task backend:lint

      - name: Run migrations
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME: starterkit
          DB_SSLMODE: disable
        run: task backend:migrate

      - name: Run tests
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME: starterkit
          DB_SSLMODE: disable
        run: task backend:test

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: ./api/coverage.out
          flags: unittests
          fail_ci_if_error: false

  frontend-lint-and-test:
    name: Frontend - Lint and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x

      - name: Install dependencies
        run: task frontend:install

      - name: Check formatting
        run: task frontend:format:check

      - name: Run type checking
        run: task frontend:typecheck

      - name: Run lint
        run: task frontend:lint

      - name: Build frontend
        run: task frontend:build
